<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    Version 2.0
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    Example:
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.
    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>